# Generated by Django 5.0 on 2025-10-16 05:20

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('human_resource', '0001_initial'),
        ('school_setting', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryAssignmentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_per_student', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('both', 'Both')], default='both', max_length=15)),
                ('is_mandatory', models.BooleanField(default=False, help_text='Must all eligible students collect?')),
                ('is_free', models.BooleanField(default=True, help_text='Is this item free or must fees be paid?')),
                ('type', models.CharField(blank=True, choices=[('pri', 'Primary'), ('sec', 'Secondary'), ('mix', 'General')], max_length=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Inventory Assignment',
                'verbose_name_plural': 'Inventory Assignments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryCollectionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_assigned', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('quantity_collected', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('collection_date', models.DateField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Collection'), ('collected', 'Collected'), ('partially_collected', 'Partially Collected'), ('cancelled', 'Cancelled'), ('returned', 'Returned')], default='pending', max_length=30)),
                ('payment_required', models.BooleanField(default=False)),
                ('amount_paid', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0.00'), help_text='Amount per student if not free', max_digits=10, null=True)),
                ('payment_completed', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Inventory Collection',
                'verbose_name_plural': 'Inventory Collections',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryReturnModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_returned', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('return_reason', models.CharField(choices=[('damaged', 'Damaged'), ('wrong_size', 'Wrong Size'), ('excess', 'Excess Quantity'), ('duplicate', 'Duplicate Collection'), ('student_left', 'Student Left School'), ('other', 'Other')], max_length=20)),
                ('return_date', models.DateField(default=django.utils.timezone.now)),
                ('item_condition', models.CharField(default='good', max_length=50)),
                ('action_taken', models.CharField(blank=True, help_text='What was done with returned items', max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('unit', models.CharField(choices=[('piece', 'Piece'), ('pack', 'Pack'), ('box', 'Box'), ('kg', 'Kilogram'), ('carton', 'Carton')], default='piece', max_length=20)),
                ('location', models.CharField(choices=[('shop', 'Shop Only'), ('store', 'Store Only'), ('both', 'Both Shop & Store')], default='both', max_length=10)),
                ('current_selling_price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Selling Price')),
                ('shop_quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('store_quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('reorder_level', models.DecimalField(decimal_places=2, default=Decimal('10.00'), max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Inventory Item',
                'verbose_name_plural': 'Inventory Items',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseAdvanceItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_description', models.CharField(help_text='Item name - auto-filled if inventory item selected, or enter custom name', max_length=255)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('estimated_unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('line_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseAdvanceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advance_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('purpose', models.TextField()),
                ('requested_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('approved_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('disbursed_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('request_date', models.DateField(default=django.utils.timezone.now)),
                ('approved_date', models.DateField(blank=True, null=True)),
                ('disbursed_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('disbursed', 'Disbursed'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Purchase Advance',
                'verbose_name_plural': 'Purchase Advances',
                'ordering': ['-request_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_description', models.CharField(help_text='Auto-filled if an inventory item is selected, or enter a custom description.', max_length=255)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_stocked_in', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('order_date', models.DateField(default=django.utils.timezone.now)),
                ('expected_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('partially_received', 'Partially Received'), ('received', 'Received'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Purchase Order',
                'verbose_name_plural': 'Purchase Orders',
                'ordering': ['-order_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseReportItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_description', models.CharField(help_text='Item name - auto-filled if inventory item selected, or enter custom name', max_length=255)),
                ('quantity_bought', models.DecimalField(decimal_places=2, max_digits=10)),
                ('actual_unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('line_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseReportModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('actual_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('balance_due', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('report_date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SaleItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='The selling price at the time of sale.', max_digits=10)),
                ('unit_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='SaleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(blank=True, max_length=50, unique=True)),
                ('sale_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('discount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('student_wallet', 'Student Wallet'), ('pos', 'POS')], default='cash', max_length=20)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('refunded', 'Refunded')], default='completed', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Sale Transaction',
                'ordering': ['-sale_date'],
            },
        ),
        migrations.CreateModel(
            name='StockInItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_received', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity_remaining', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('unit_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('batch_number', models.CharField(blank=True, max_length=100, null=True)),
                ('expiry_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StockInModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('source', models.CharField(choices=[('purchase', 'Purchase'), ('return', 'Return'), ('adjustment', 'Adjustment'), ('transfer', 'Transfer'), ('donation', 'Donation')], default='purchase', max_length=20)),
                ('date_received', models.DateField(default=django.utils.timezone.now)),
                ('location', models.CharField(choices=[('shop', 'Shop Only'), ('store', 'Store Only'), ('both', 'Both Shop & Store')], default='store', max_length=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Stock In Batch',
                'ordering': ['-date_received'],
            },
        ),
        migrations.CreateModel(
            name='StockOutModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_removed', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('unit_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('reason', models.CharField(choices=[('staff_collection', 'Staff Collection'), ('damage', 'Damage'), ('expired', 'Expired'), ('adjustment', 'Stock Adjustment'), ('wastage', 'Wastage'), ('cafeteria', 'Cafeteria'), ('boarding house store', 'Boarding House Store')], max_length=20)),
                ('location', models.CharField(choices=[('store', 'Store'), ('shop', 'Shop')], max_length=10)),
                ('date_removed', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Stock Out Record',
                'ordering': ['-date_removed'],
            },
        ),
        migrations.CreateModel(
            name='StockTransferItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
            ],
        ),
        migrations.CreateModel(
            name='StockTransferModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('direction', models.CharField(choices=[('store_to_shop', 'Store to Shop'), ('shop_to_store', 'Shop to Store')], max_length=20)),
                ('transfer_date', models.DateField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Stock Transfer Batch',
                'ordering': ['-transfer_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SupplierModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Supplier',
                'verbose_name_plural': 'Suppliers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CollectionGenerationJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('success', 'Success'), ('failure', 'Failure')], default='pending', max_length=20)),
                ('total_students', models.IntegerField(default=0)),
                ('processed_students', models.IntegerField(default=0)),
                ('created_collections', models.IntegerField(default=0)),
                ('skipped_students', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Collection Generation Job',
                'verbose_name_plural': 'Collection Generation Jobs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DirectSaleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('unit_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('payment_completed', models.BooleanField(default=True)),
                ('payment_method', models.CharField(blank=True, help_text='Cash, Transfer, etc.', max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('sale_date', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='school_setting.sessionmodel')),
                ('sold_by', models.ForeignKey(blank=True, help_text='Staff who processed the sale', null=True, on_delete=django.db.models.deletion.SET_NULL, to='human_resource.staffmodel')),
            ],
            options={
                'verbose_name': 'Direct Sale',
                'verbose_name_plural': 'Direct Sales',
                'ordering': ['-sale_date', '-created_at'],
            },
        ),
    ]
