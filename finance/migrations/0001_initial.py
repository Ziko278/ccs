# Generated by Django 5.0 on 2025-10-16 05:20

import django.core.validators
import django.utils.timezone
import uuid
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdvanceSettlementModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('settlement_type', models.CharField(choices=[('refund', 'Refund to Staff'), ('payment', 'Payment by Staff')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('settlement_date', models.DateField(default=django.utils.timezone.now)),
                ('payment_method', models.CharField(default='cash', max_length=50)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Expense Category',
                'verbose_name_plural': 'Expense Categories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ExpenseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('expense_date', models.DateField(db_index=True, default=django.utils.timezone.now)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Card'), ('transfer', 'Bank Transfer')], default='cash', max_length=50)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('receipt', models.FileField(blank=True, null=True, upload_to='finance/expenses/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Expense',
                'verbose_name_plural': 'Expenses',
                'ordering': ('-expense_date', '-created_at'),
            },
        ),
        migrations.CreateModel(
            name='FeeGroupModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Fee Group',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FeeMasterModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Fee Structure',
                'verbose_name_plural': 'Fee Structures',
            },
        ),
        migrations.CreateModel(
            name='FeeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('code', models.CharField(help_text='A unique code for this fee, e.g., TUI-001.', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('occurrence', models.CharField(choices=[('quaterly', 'Quaterly'), ('annually', 'Annually'), ('one_time', 'One Time')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Fee Type',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='FeePaymentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_mode', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer')], max_length=20)),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('reference', models.CharField(blank=True, default='', max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Fee Payment',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='FinanceSettingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allow_partial_payments', models.BooleanField(default=True)),
                ('send_payment_receipt_email', models.BooleanField(default=True, help_text='Automatically email a receipt to the parent upon payment confirmation.')),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='IncomeCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Income Category',
                'verbose_name_plural': 'Income Categories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='IncomeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, default='', max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('income_date', models.DateField(db_index=True, default=django.utils.timezone.now)),
                ('source', models.CharField(blank=True, max_length=100, null=True)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('receipt', models.FileField(blank=True, null=True, upload_to='finance/income/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'jpg', 'jpeg', 'png'])])),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Income',
                'verbose_name_plural': 'Incomes',
                'ordering': ('-income_date', '-created_at'),
            },
        ),
        migrations.CreateModel(
            name='InvoiceGenerationJob',
            fields=[
                ('job_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('success', 'Success'), ('failure', 'Failure')], default='pending', max_length=20)),
                ('total_students', models.PositiveIntegerField(default=0)),
                ('processed_students', models.PositiveIntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceItemModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='InvoiceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('issue_date', models.DateField(default=django.utils.timezone.now)),
                ('due_date', models.DateField()),
                ('status', models.CharField(choices=[('unpaid', 'Unpaid'), ('partially_paid', 'Partially Paid'), ('paid', 'Paid')], default='unpaid', max_length=20)),
            ],
            options={
                'verbose_name': 'Student Invoice',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='PurchaseAdvancePaymentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_date', models.DateField(default=django.utils.timezone.now)),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('bank_transfer', 'Bank Transfer'), ('cheque', 'Cheque')], default='cash', max_length=50)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('voucher_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SalaryAdvance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reason', models.TextField()),
                ('request_date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('disbursed', 'Disbursed'), ('completed', 'Completed'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('repaid_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('approved_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SalaryRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.PositiveIntegerField()),
                ('year', models.PositiveIntegerField()),
                ('basic_salary', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('housing_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('transport_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('medical_allowance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('other_allowances', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('pension_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('bonus', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('other_deductions', models.DecimalField(decimal_places=2, default=0, help_text='e.g., salary advance repayment', max_digits=12)),
                ('salary_advance_deduction', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('is_paid', models.BooleanField(default=False)),
                ('paid_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-year', '-month'],
            },
        ),
        migrations.CreateModel(
            name='SalaryStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('basic_salary', models.DecimalField(decimal_places=2, max_digits=12)),
                ('housing_allowance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('transport_allowance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('medical_allowance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('other_allowances', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Percentage (e.g., 7.5)', max_digits=5)),
                ('pension_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Percentage (e.g., 8)', max_digits=5)),
                ('effective_from', models.DateField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Salary Structure',
            },
        ),
        migrations.CreateModel(
            name='SchoolBankDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=20, unique=True)),
                ('account_name', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Staff Bank Detail',
            },
        ),
        migrations.CreateModel(
            name='StaffBankDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=20, unique=True)),
                ('account_name', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Staff Bank Detail',
            },
        ),
        migrations.CreateModel(
            name='StaffLoan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('reason', models.TextField()),
                ('repayment_plan', models.TextField(blank=True, help_text='e.g., How the staff intends to repay.', null=True)),
                ('request_date', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('disbursed', 'Disbursed'), ('completed', 'Completed'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('repaid_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('approved_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StaffLoanRepayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudentFundingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('proof_of_payment', models.FileField(blank=True, null=True, upload_to='images/funding')),
                ('method', models.CharField(choices=[('cash', 'Cash'), ('pos', 'POS'), ('bank teller', 'Bank Teller'), ('bank transfer', 'Bank Transfer')], default='cash', max_length=100)),
                ('mode', models.CharField(blank=True, choices=[('offline', 'Offline'), ('online', 'Online')], default='offline', max_length=100)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('failed', 'Failed')], default='confirmed', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('teller_number', models.CharField(blank=True, max_length=50, null=True)),
                ('decline_reason', models.CharField(blank=True, max_length=250, null=True)),
                ('reference', models.CharField(blank=True, help_text='Unique reference for this transaction.', max_length=250, null=True)),
            ],
            options={
                'verbose_name': 'Student Funding Record',
                'verbose_name_plural': 'Student Funding Records',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SupplierPaymentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('payment_date', models.DateField(default=django.utils.timezone.now)),
                ('payment_method', models.CharField(choices=[('bank_transfer', 'Bank Transfer'), ('cash', 'Cash'), ('cheque', 'Cheque')], default='bank_transfer', max_length=50)),
                ('reference', models.CharField(blank=True, help_text='e.g., Cheque number, transaction ID', max_length=100, null=True)),
                ('receipt_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('completed', 'Completed'), ('reverted', 'Reverted')], default='completed', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Supplier Payment',
                'verbose_name_plural': 'Supplier Payments',
                'ordering': ['-payment_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TermlyFeeAmountModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'ordering': ['term__order'],
            },
        ),
    ]
